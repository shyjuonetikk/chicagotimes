<?php

/**
 * Theme functionality for the frontend
 */
class CST_Frontend {

	private static $instance;

	private $nav_title_filter;

	public static $post_sections = array( 'news', 'sports', 'politics', 'entertainment', 'lifestyles', 'opinion', 'columnists', 'obituaries', 'sponsored', 'autos' );

	private $send_to_news_embeds = array(
		'cubs'              => 'uqWfqG2Y',
		'cubs-baseball'     => 'uqWfqG2Y',
		'white-sox'         => 'WOOeQ5Jw',
		'bulls'             => 's3AyJdaz',
		'bears'             => 'C30fZO7v',
		'bears-football'    => 'C30fZO7v',
		'pga-golf'          => '8Owdfvnq',
		'nascar'            => 'hdUJ4uMz',
		'ahl-wolves'        => 'dAT6rZV6',
		'colleges'          => 'IS3jNqMB',
		'olympics-2016'     => 'BQ3NYJzd',
		'blackhawks-hockey' => 'idn8h9Kj',
		'sports'            => 'uDnVEu1d',
	);
	public static $pgs_section_slugs = array();
	private $default_image_partial_url = '/assets/images/favicons/mstile-144x144.png';

	public static $triple_lift_section_slugs = array(
		'dear-abby',
	);
	public static function get_instance() {

		if ( ! isset( self::$instance ) ) {
			self::$instance = new CST_Frontend;
			self::$instance->setup_actions();
			self::$instance->setup_filters();
		}
		return self::$instance;
	}

	/**
	 * Set up frontend customization actions
	 */
	private function setup_actions() {

		add_action( 'pre_get_posts', array( $this, 'action_pre_get_posts' ) );
		add_action( 'wp_enqueue_scripts', array( $this, 'action_wp_enqueue_scripts' ) );

		add_action( 'wp_head', array( $this, 'action_wp_head_meta_tags' ) );

		add_action( 'rss2_item', array( $this, 'action_rss2_item' ) );

		/*
		 * Hack to address invalid URLs generated by wp.me
		 * Early priority to happen before canonical redirect
		 */
		add_action( 'template_redirect', function() {
			global $wpdb;

			/*
			 * Pattern like /2014/09/24/emanuel-criticizes-lewis-for-wanting-to-legalize-tax-marijuana/
			 * Turns into pagename=2014%2F09%2F24%2Femanuel-criticizes-lewis-for-wanting-to-legalize-tax-marijuana
			 * Because we ain't got no post rewrite rules
			 *
			 * See http://wordpressvip.zendesk.com/requests/33709
			 */
			if ( is_404() && get_query_var( 'pagename' ) ) {
				$pagename = get_query_var( 'pagename' );
				$parts = explode( '%2', $pagename );
				$post_name = array_pop( $parts );
				$post_id = $wpdb->get_var( $wpdb->prepare( "SELECT ID FROM $wpdb->posts WHERE post_type='cst_link' AND post_status='publish' AND post_name=%s", $post_name ) );
				if ( $post_id ) {
					// Will be an external link
					wp_redirect( get_permalink( $post_id ) );
					exit;
				}
			}

		}, 9 );

		add_action( 'cst_section_head', array( $this, 'action_cst_section_head_video' ) );

		add_action( 'cst_section_front_heading', array( $this, 'action_cst_section_front_heading' ) );
		add_action( 'header_sliding_billboard', array( $this, 'action_maybe_render_sliding_billboard' ) );
		add_action( 'closing_body', array( $this, 'inject_teads_tag' ) );
		add_action( 'wp_enqueue_scripts', array( $this, 'cst_remove_extra_twitter_js' ), 15 );
		add_action( 'wp_footer', array( $this, 'cst_remove_extra_twitter_js' ), 15 );

		add_action( 'cst_dfp_ad_settings', array( $this, 'setup_dfp_header_ad_settings' ) );
		add_action( 'wp_head', array( $this, 'action_cst_openx_header_bidding_script' ) );
	}

	/**
	 * Set up frontend customization filters
	 */
	private function setup_filters() {

		add_filter( 'post_class', array( $this, 'filter_post_class' ) );

		add_filter( 'wp_title', array( $this, 'filter_wp_title' ) );
		add_filter( 'the_content', array( $this, 'filter_article_featured_image' ) );

		add_filter( 'embed_oembed_html', array( $this, 'filter_embed_oembed_html' ), 10, 4 );

		add_filter( 'nav_menu_link_attributes', array( $this, 'filter_nav_menu_link_attributes' ), 10, 3 );
		add_filter( 'walker_nav_menu_start_el', array( $this, 'filter_walker_nav_menu_start_el' ) );

		add_filter( 'the_content', [ $this, 'inject_sponsored_content' ] );
	}

	/**
	 * Modifications to the main query
	 *
	 * @param \WP_query $query
	 */
	public function action_pre_get_posts( $query ) {

		// Include all content types on the homepage
		if ( $query->is_main_query() && ( $query->is_home() || $query->is_tax() || $query->is_author() ) ) {
			$query->set( 'post_type', CST()->get_post_types() );
		} else if ( $query->is_main_query() && 'print' === get_query_var( 'feed' ) ) {

			// Build the print feed from selected posts
			$print_post_ids = CST()->get_print_feed_post_ids();
			if ( ! empty( $print_post_ids ) ) {
				$query->set( 'post__in', $print_post_ids );
				$query->set( 'post_type', 'cst_article' );
				$query->set( 'post_status', 'publish' );
				$query->set( 'orderby', 'post__in' );
				$query->set( 'posts_per_page', 100 );
				$query->set( 'ignore_sticky_posts', true );
			} else {
				// when passed an empty array, post__in returns main query
				// This is a better way of killing it
				$query->set( 'post_type', 'd5t34tfgdfg' );
			}

		} else if ( $query->is_main_query() && $query->is_feed() ) {
			$query->set( 'post_type', 'cst_article' );
			$query->set( 'ignore_sticky_posts', true );
		}

	}

	/**
	 * Enqueue scripts and styles
	 */
	public function action_wp_enqueue_scripts() {
		// Foundation
		wp_enqueue_script( 'foundation', get_template_directory_uri() . '/assets/js/vendor/foundation.min.js', array( 'jquery' ), '5.2.3' );
		wp_enqueue_style( 'foundation', get_template_directory_uri() . '/assets/css/vendor/foundation.min.css', false, '5.2.3' );
		wp_enqueue_script( 'modernizr', get_template_directory_uri() . '/assets/js/vendor/modernizr.js', array( 'jquery' ), '5.2.3' );
		wp_enqueue_style( 'fontawesome', get_template_directory_uri() . '/assets/css/vendor/font-awesome.min.css' );


		// Fonts
		wp_enqueue_style( 'google-fonts', 'https://fonts.googleapis.com/css?family=Merriweather:300,300i,400,400i,700,700i,900,900i|Open+Sans:300,400,400i,600,600i,700,700i,800,800i|Raleway&amp;subset=latin' );

		if ( is_page_template( 'page-monster.php' ) ) {
			wp_enqueue_script( 'monster-footerhook', get_template_directory_uri() . '/assets/js/vendor/footerhookv1-min.js', array( 'jquery' ), false, true );
			wp_enqueue_script( 'twitter-platform', '//platform.twitter.com/widgets.js', array(), null, true );
			wp_enqueue_style( 'chicagosuntimes', get_template_directory_uri() . '/assets/css/theme.css', array( 'google-fonts' ) );
			wp_enqueue_script( 'cst-custom-js', get_template_directory_uri() . '/assets/js/theme-custom-page.js' );

		} else {
			wp_enqueue_style( 'fontawesome', get_template_directory_uri() . '/assets/css/vendor/font-awesome.min.css' );
			wp_enqueue_style( 'cst-weathericons', get_template_directory_uri() . '/assets/css/vendor/weather/css/weather-icons.css' );

			$this->action_load_section_styling();

			// If we are on a 404 page don't try and load scripts/css that we won't be using.
			if ( ! is_404() && ! is_page() ) {
				// The theme
				if ( is_front_page() ) {
					wp_enqueue_script( 'chicagosuntimes-homepage', get_template_directory_uri() . '/assets/js/theme-homepage.js' );
				} else {
					wp_enqueue_script( 'chicagosuntimes', get_template_directory_uri() . '/assets/js/theme.js', array( 'jquery-effects-slide' ) );
				}
				if ( ! is_front_page() || ! is_page() ) {
					// Scripty-scripts
					wp_enqueue_script( 'twitter-platform', '//platform.twitter.com/widgets.js', array(), null, true );
					wp_enqueue_script( 'add-this', '//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5419af2b250842c9', array(), null, true );

					// Slick
					wp_enqueue_script( 'slick', get_template_directory_uri() . '/assets/js/vendor/slick/slick.min.js', array( 'jquery' ), '1.3.6' );
					wp_enqueue_style( 'slick', get_template_directory_uri() . '/assets/js/vendor/slick/slick.css', false, '1.3.6' );
					wp_localize_script( 'chicagosuntimes', 'CSTData', array(
						'home_url'                           => esc_url_raw( home_url() ),
						'disqus_shortname'                   => CST_DISQUS_SHORTNAME,
					) );
					wp_enqueue_script( 'cst-gallery', get_template_directory_uri() . '/assets/js/gallery.js', array( 'slick' ) );
					wp_enqueue_script( 'cst-events', get_template_directory_uri() . '/assets/js/event-tracking.js', array( 'jquery' ) );
					wp_enqueue_script( 'cst-ga-custom-actions', get_template_directory_uri(). '/assets/js/analytics.js', array( 'jquery' ) );
					wp_enqueue_script( 'cst-ga-autotrack', get_template_directory_uri(). '/assets/js/vendor/autotrack.js', array( 'jquery' ) );
					$analytics_data = array(
						'is_singular'     => is_singular(),
					);
					if ( is_singular() && $obj = \CST\Objects\Post::get_by_post_id( get_queried_object_id() ) ) {
						for ( $i = 1;  $i <= 9;  $i++ ) {
							$analytics_data[ 'dimension' . $i ] = $obj->get_ga_dimension( $i );
						}
						if ( ! $obj->get_sponsored_content() ) {
							wp_enqueue_script( 'cst-triplelift', get_template_directory_uri(). '/assets/js/vendor/cst_triplelift.js', array(), false, true );
						}
						wp_enqueue_script( 'aggrego-chatter', get_template_directory_uri(). '/assets/js/vendor/aggrego-chatter.js', array(), false, true );
					}

					wp_localize_script( 'cst-ga-custom-actions', 'CSTAnalyticsData', $analytics_data );
				}

				if ( is_singular() && ! is_admin() ) {
					wp_enqueue_script( 'google-survey', get_template_directory_uri() . '/assets/js/vendor/google-survey.js' );
					wp_enqueue_script( 'yieldmo', get_template_directory_uri() . '/assets/js/vendor/yieldmo.js' );
				}

				if ( is_page() ) {
					wp_enqueue_script( 'google-maps', get_template_directory_uri() . '/assets/js/vendor/google-map.js', array( 'jquery' ), '5.2.3' );
				}
				if ( ( is_tax() || is_singular() ) && ! is_admin() ) {
					wp_enqueue_script( 'cst-ads', get_template_directory_uri() . '/assets/js/ads.js', array( 'jquery' ) );
					wp_enqueue_script( 'cst-sticky', get_template_directory_uri() . '/assets/js/vendor/sticky-kit.min.js', array( 'jquery' ) );
				}
			} else {
				wp_enqueue_script( 'chicagosuntimes-404page', get_template_directory_uri() . '/assets/js/404.js' );
			}

			wp_localize_script( 'chicagosuntimes', 'CSTIE', array( 'cst_theme_url' => get_template_directory_uri() ) );

		}

	}

	/**
	 * Load the correct style sheet based on the section or ref
	 */
	public function action_load_section_styling() {

		if ( is_author() ) {
			wp_enqueue_style( 'chicagosuntimes', get_template_directory_uri() . '/assets/css/theme.css', array( 'google-fonts', 'fontawesome' ) );
		} elseif ( is_tax() ) {
			$section_obj = get_queried_object();
			if( $section_obj->taxonomy == 'cst_section' ) {
				if( $section_obj->parent != 0 ) {
					$parent_terms = get_term( $section_obj->parent, 'cst_section' );
					if( ! in_array( $parent_terms->slug, CST_Frontend::$post_sections ) ) {
						$child_terms = get_term( $parent_terms->parent, 'cst_section' );
						$section_slug = $child_terms->slug;
					} else {
						$section_slug = $parent_terms->slug;
					}
				} else {
					$section_slug = $section_obj->slug;
				}
			} else {
				$section_slug = 'news';
			}
			
			switch ( $section_slug ) {
				case 'sports':
					wp_enqueue_style( 'chicagosuntimes-sports', get_template_directory_uri() . '/assets/css/sports-theme.css', array( 'google-fonts', 'fontawesome' ) );
					break;
				case 'politics':
					wp_enqueue_style( 'chicagosuntimes-politics', get_template_directory_uri() . '/assets/css/politics-theme.css', array( 'google-fonts', 'fontawesome' ) );
					break;
				case 'entertainment':
					wp_enqueue_style( 'chicagosuntimes-entertainment', get_template_directory_uri() . '/assets/css/entertainment-theme.css', array( 'google-fonts', 'fontawesome' ) );
					break;
				case 'lifestyles':
					wp_enqueue_style( 'chicagosuntimes-lifestyles', get_template_directory_uri() . '/assets/css/lifestyles-theme.css', array( 'google-fonts', 'fontawesome' ) );
					break;
				case 'columnists':
					wp_enqueue_style( 'chicagosuntimes-columnists', get_template_directory_uri() . '/assets/css/columnists-theme.css', array( 'google-fonts', 'fontawesome' ) );
					break;
				case 'opinion':
					wp_enqueue_style( 'chicagosuntimes-opinion', get_template_directory_uri() . '/assets/css/opinion-theme.css', array( 'google-fonts', 'fontawesome' ) );
					break;
				case 'news':
				case 'sponsored':
					wp_enqueue_style( 'chicagosuntimes', get_template_directory_uri() . '/assets/css/theme.css', array( 'google-fonts', 'fontawesome' ) );
					break;
				default:
					wp_enqueue_style( 'chicagosuntimes', get_template_directory_uri() . '/assets/css/theme.css', array( 'google-fonts', 'fontawesome' ) );
					break;
			}

		} elseif ( $obj = get_queried_object() ) {
			
					wp_enqueue_style( 'chicagosuntimes', get_template_directory_uri() . '/assets/css/theme.css', array( 'google-fonts', 'fontawesome' ) );


		} else {
			wp_enqueue_style( 'chicagosuntimes', get_template_directory_uri() . '/assets/css/theme.css', array( 'google-fonts', 'fontawesome' ) );
		}

	}

	/**
	 * Add meta tags to the head of our site
	 */
	public function action_wp_head_meta_tags() {

		if ( is_singular() ) {
			$post = \CST\Objects\Post::get_by_post_id( get_queried_object_id() );
			$meta_description = $post->get_seo_description();
		} elseif ( is_tax() && $description = get_queried_object()->description ) {
			$meta_description = $description;
		} 
		else {
			$meta_description = get_bloginfo( 'description' );
		}

		$facebook_tags = $this->get_facebook_open_graph_meta_tags();
		$twitter_tags = $this->get_twitter_card_meta_tags();

		$tags = array_merge( array( 'description' => $meta_description ), $facebook_tags, $twitter_tags );
		foreach( $tags as $name => $value ) {
			echo '<meta property="' . esc_attr( $name ) . '" content="' . esc_attr( $value ) . '" />' . PHP_EOL;
		}

		echo '<meta name="description" content="' . esc_attr( $meta_description ) . '" />' . PHP_EOL;

	}

	/**
	 * If a post has multiple bylines, include all of them in the feed item
	 */
	public function action_rss2_item() {

		$authors = get_coauthors();
		if ( count( $authors ) <= 1 ) {
			return;
		}
		// Discard the first as it's already been added
		array_shift( $authors );
		foreach( $authors as $author ) {
			echo '<dc:creator><![CDATA[' . esc_html( $author->display_name ) . ']]></dc:creator>';
		}

	}

	/**
	 * Filter the title on single posts
	 * @param $wp_title
	 *
	 * @return string
	 */
	public function filter_wp_title( $wp_title ) {

		if ( empty( $wp_title ) && ( is_home() || is_front_page() ) ) {
			return 'Chicago Sun-Times: Chicago news, sports, politics, entertainment';
		}

		if ( is_404() ) {
			return 'Page not found - Chicago Sun-Times';
		}

		if ( is_tax() ) {

			switch ( get_queried_object()->slug ) {
				case 'business':
					return 'Chicago Business - Chicago Sun-Times';
				case 'chicago':
					return 'Chicago Breaking News - Chicago Sun-Times';
				case 'crime':
					return 'Chicago Crime - Chicago Sun-Times';
				case 'education':
					return 'Chicago Education - Chicago Sun-Times';
				case 'entertainment':
					return 'Chicago Entertainment - Chicago Sun-Times';
				case 'nationworld':
				case 'world':
					return 'U.S. News &amp; World News - Chicago Sun-Times';
				case 'politics':
					return 'Chicago Politics - Chicago Sun-Times';
				case 'sports':
					return 'Chicago Sports, News, Schedules &amp; Scores - Chicago Sun-Times';
				case 'transportation':
					return 'Chicago Transit &amp; Transportation - Chicago Sun-Times';
				default:
					return get_queried_object()->name . ' - Chicago Sun-Times';
			}
		}
		
		if ( is_author() ) {
			return $wp_title . get_bloginfo( 'name' );
		}

		if ( ! is_singular() ) {
			return $wp_title;
		}

		$post = \CST\Objects\Post::get_by_post_id( get_queried_object_id() );
		return $post->get_seo_title();

	}

	/**
	 * If using an embedded video (from SendToNews) insert the assigned featured image
	 * ahead of the the 5th paragraph
	 *
	 * This functions runs as part of the_content filter
	 *
	 * @param $content
	 *
	 * @return string
	 */
	public function filter_article_featured_image( $content ) {

		$obj = \CST\Objects\Post::get_by_post_id( get_queried_object_id() );
		if ( false !== $obj && $obj->get_post_type() === 'cst_article' ) {
			if ( 'video' === $obj->get_featured_media_type() ) {
				$exploded = explode( '</p>',$content );
				array_splice( $exploded, 4, 0, CST()->featured_image_markup( $obj ) );
				$content = join( '</p>',$exploded );
			}
		}
		return $content;
	}

	/**
	 * Filter nav menu item links
	 */
	public function filter_nav_menu_link_attributes( $atts, $item, $args ) {

		if ( empty( $args->theme_location ) ) {
			return $atts;
		}

		switch( $args->theme_location ) {

			case 'trending-menu':

				$fontawesome_icon = false;

				if ( 'taxonomy' === $item->type && 'cst_person' === $item->object ) {
					$fontawesome_icon = 'fa fa-male';
				}

				if ( 'taxonomy' === $item->type && 'cst_location' === $item->object ) {
					$fontawesome_icon = 'fa fa-location-arrow';
				}

				if ( 'taxonomy' === $item->type && 'cst_topic' === $item->object ) {
					$fontawesome_icon = 'fa fa-cst-topic';
				}

				if ( 'taxonomy' === $item->type && 'cst_section' === $item->object ) {
					$fontawesome_icon = 'fa fa-folder';
				}

				if ( 'post_type' === $item->type && 'cst_liveblog' === $item->object ) {
					$fontawesome_icon = 'fa fa-comment';
				}

				if ( 'custom' === $item->type ) {
					$fontawesome_icon = 'fa fa-link';
				}

				if ( $fontawesome_icon ) {
					// WordPress is a series of massive hacks: https://core.trac.wordpress.org/ticket/29417
					$this->nav_title_filter = function( $item_title ) use ( $fontawesome_icon ) {
						$item_title = '<i class="' . esc_attr( $fontawesome_icon ) . '"></i>' . $item_title;
						return $item_title;
					};
					add_filter( 'the_title', $this->nav_title_filter, 10, 2 );
				}

				break;

		}

		return $atts;
	}

	/**
	 * Remove the title filter if there is one
	 */
	public function filter_walker_nav_menu_start_el( $output ) {

		if ( $this->nav_title_filter ) {
			remove_filter( 'the_title', $this->nav_title_filter );
			$this->nav_title_filter = false;
		}

		return $output;
	}

	/**
	 * Filter oEmbed response HTML to make some embeds responsive
	 */
	public function filter_embed_oembed_html( $cache, $url, $attr, $post_ID ) {

		$host = parse_url( $url, PHP_URL_HOST );
		switch ( $host ) {

			case 'www.youtube.com':
				$cache = str_replace( '<iframe ', '<iframe class="cst-responsive" data-true-height="640" data-true-width="360" ', $cache );
				break;

			case 'instagr.am';
			case 'instagram.com':
				$cache = str_replace( '_a.jpg', '_o.jpg', $cache );
				$cache = str_replace( '<img ', '<img style="width: 100% !important; height: auto !important;" ', $cache );
				break;

		}
		return $cache;
	}

	/**
	 * Filter post classes
	 */
	public function filter_post_class( $classes ) {

		$classes[] = 'post'; // Easier styling across all post types

		if ( get_the_ID() === get_queried_object_id() ) {
			$classes[] = 'active';
		}

		if ( 'cst_embed' == get_post_type() ) {
			$obj = new \CST\Objects\Embed( get_the_ID() );
			$classes[] = 'cst-embed-' . $obj->get_embed_type();
		}

		return $classes;
	}

	/**
	 * Get the Facebook Open Graph meta tags for this page
	 */
	public function get_facebook_open_graph_meta_tags() {

		// Defaults
		$tags = array(
			'og:site_name'        => get_bloginfo( 'name' ),
			'og:type'             => 'website',
			'og:title'            => get_bloginfo( 'name' ),
			'og:description'      => get_bloginfo( 'description' ),
			'og:url'              => esc_url( home_url( $_SERVER['REQUEST_URI'] ) ),
			);

		// Single posts
		if ( is_singular() ) {
			$obj = \CST\Objects\Post::get_by_post_id( get_queried_object_id() );
			$tags['og:title'] = $obj->get_facebook_open_graph_tag( 'title' );
			$tags['og:type'] = 'article';
			$tags['og:description'] = $obj->get_facebook_open_graph_tag( 'description' );
			$tags['og:url'] = $obj->get_facebook_open_graph_tag( 'url' );
			if ( $image = $obj->get_facebook_open_graph_tag( 'image' ) ) {
				$tags['og:image'] = $image;
			}
		} elseif ( is_tax() && $description = get_queried_object()->description ) {
			$tags['og:description'] = $description;
		}

		return $tags;

	}

	/**
	 * Get the Twitter card meta tags for this page
	 */
	public function get_twitter_card_meta_tags() {

		// Defaults
		$tags = array(
			'twitter:card'        => 'summary_large_image',
			'twitter:site'        => '@' . CST_TWITTER_USERNAME,
			'twitter:title'       => get_bloginfo( 'name' ),
			'twitter:description' => get_bloginfo( 'description' ),
			'twitter:url'         => esc_url( home_url( $_SERVER['REQUEST_URI'] ) ),
			);

		// Single posts
		if ( is_singular() ) {
			$obj = \CST\Objects\Post::get_by_post_id( get_queried_object_id() );
			$tags['twitter:title'] = $obj->get_twitter_card_tag( 'title' );
			$tags['twitter:description'] = $obj->get_twitter_card_tag( 'description' );
			$tags['twitter:url'] = $obj->get_twitter_card_tag( 'url' );

			if ( $image = $obj->get_twitter_card_tag( 'image' ) ) {
				$tags['twitter:image'] = $image;
			}

		} elseif ( is_tax() && $description = get_queried_object()->description ) {
			$tags['twitter:description'] = $description;
		}

		return $tags;

	}

	/**
	 * Ensure there's enough posts for a collection of posts
	 *
	 * @param array $collection
	 * @param int $minimum_count
	 * @param string|array $section
	 * @return array
	 */
	public function ensure_minimum_post_count( $collection, $minimum_count, $section ) {
		static $fetched_posts;

		if ( count( $collection ) >= $minimum_count ) {
			return $collection;
		}

		if ( ! is_array( $fetched_posts ) ) {
			$fetched_posts = array();
		}

		$query_args = array(
			'post_type'        => array( 'cst_article' ),
			'posts_per_page'   => $minimum_count - count( $collection ),
			'post_status'      => 'publish',
			'post__not_in'     => array_merge( $fetched_posts, wp_list_pluck( $collection, 'ID' ) ),
			'no_found_rows'    => true,
			'cst_section'	   => $section,
			);

		if ( is_array( $section ) ) {
			$query_args['tax_query'] = array(
				array(
					'taxonomy'  => 'cst_section',
					'field'     => 'slug',
					'terms'     => $section,
				)
			);
			unset( $query_args['cst_section'] );
		}


		$post_query = new \WP_Query( $query_args );
		$fetched_posts = array_merge( $fetched_posts, wp_list_pluck( $post_query->posts, 'ID' ) );
		return array_merge( $collection, $post_query->posts );
	}

	public function get_weather() {
		$response = wpcom_vip_file_get_contents( 'http://apidev.accuweather.com/currentconditions/v1/348308.json?language=en&apikey=' . CST_ACCUWEATHER_API_KEY );
		$data = json_decode( $response );
		if ( ! $data ) {
			return false;
		} 
		return $data;

	}

	public function get_weather_icon($number) {
		$icon = '';
		switch( $number ) {

			case 1:
				$icon = 'wi-sunny-day';
				break;
			case 2:
			case 3:
				$icon = 'wi-day-sunny-overcast';
				break;
			case 4:
			case 6:
			case 7:
				$icon = 'wi-day-cloudy';
				break;
			case 5:
			case 8:
			case 11:
				$icon = 'wi-day-fog';
				break;
			case 12:
				$icon = 'wi-showers';
				break;
			case 13:
			case 14:
				$icon = 'wi-day-showers';
				break;
			case 15:
				$icon = 'wi-thunderstorm';
				break;
			case 16:
				$icon = 'wi-day-thunderstorm';
				break;
			case 17:
				$icon = 'wi-day-storm-showers';
				break;
			case 18:
				$icon = 'wi-showers';
				break;
			case 19:
				$icon = 'wi-snow-wind';
				break;
			case 20:
			case 21:
				$icon = 'wi-day-snow';
				break;
			case 22:
				$icon = 'wi-snow';
				break;
			case 23:
				$icon = 'wi-day-snow';
				break;
			case 24:
				$icon = 'wi-snowflake-cold';
				break;
			case 25:
				$icon = 'wi-hail';
				break;
			case 26:
				$icon = 'wi-rain';
				break;
			case 29:
				$icon = 'wi-rain-mix';
				break;
			case 30:
				$icon = 'wi-hot';
				break;
			case 31:
				$icon = 'wi-snowflake-cold';
				break;
			case 32:
				$icon = 'wi-strong-wind';
				break;
			case 33:
				$icon = 'wi-night-clear';
				break;
			case 34:
			case 35:
			case 36:
				$icon = 'wi-night-cloudy';
				break;
			case 37:
				$icon = 'wi-night-fog';
				break;
			case 38:
				$icon = 'wi-cloudy';
				break;
			case 39:
				$icon = 'wi-night-alt-sprinkle';
				break;
			case 40:
				$icon = 'wi-night-showers';
				break;
			case 41:
				$icon = 'wi-night-lightning';
				break;
			case 42:
				$icon = 'wi-night-storm-showers';
				break;
			case 43:
				$icon = 'wi-night-snow';
				break;
			case 44:
				$icon = 'wi-night-alt-snow';
				break;
			default:
				break;

		}
		return $icon;

	}

	public function get_taxonomy_image($taxonomy) {

		$taxonomy = sanitize_key( $taxonomy );
		if( file_exists( get_template_directory() . '/assets/images/taxonomy/taxonomy-' . $taxonomy . '.jpg' ) ) {
		    return get_template_directory_uri() . '/assets/images/taxonomy/taxonomy-' . $taxonomy . '.jpg';
		}
		elseif ( file_exists( get_template_directory() . '/assets/images/taxonomy/taxonomy-' . $taxonomy . '.svg' ) ) {
			return get_template_directory_uri() . '/assets/images/taxonomy/taxonomy-' . $taxonomy . '.svg';
		}
		elseif ( file_exists( get_template_directory() . '/assets/images/taxonomy/taxonomy-' . $taxonomy . '.png' ) ) {
			return get_template_directory_uri() . '/assets/images/taxonomy/taxonomy-' . $taxonomy . '.png';
		}
		 else {
		    return false;
		}
		
	}

	public function cst_homepage_get_traffic() {
		$response = wpcom_vip_file_get_contents( 'http://www.mapquestapi.com/traffic/v2/incidents?key=' . CST_MAPQUEST_API_KEY . '&boundingBox=41.8,-87.7,42.3,-88.2&filters=construction,incidents&outFormat=json' );
		$result = json_decode( $response );

		if ( ! $result ) {
			$_traffic['icon'] = '';
			$_traffic['word'] = '';
			return $_traffic;
		}

		$data = (object) array( json_decode( $response ) );

		$count = 0;
		$total_severity = 0;
		foreach( $data as $traffic ) {

			$total = count($traffic->incidents);
			for( $i=0; $i <= ( $total - 1); $i++ ) {
				$total_severity += $traffic->incidents[$i]->severity;
			}

		}
		$_traffic['accidents'] = $total;
		if( $total_severity <= $total ) {
			$_traffic['icon'] = 'green';
			$_traffic['word'] = 'Light';
		} elseif( $total_severity >= ($total * 2) ) {
			$_traffic['icon'] = 'orange';
			$_traffic['word'] = 'Mild';
		} elseif( $total_severity >= ($total * 3) ) {
			$_traffic['icon'] = 'red';
			$_traffic['word'] = 'High';
		}
		return $_traffic;

	}

	public function cst_homepage_get_traffic_report() {
		$response = wpcom_vip_file_get_contents( 'http://www.mapquestapi.com/traffic/v2/incidents?key=' . CST_MAPQUEST_API_KEY . '&boundingBox=41.8,-87.7,42.3,-88.2&filters=construction,incidents&outFormat=json' );
		$result = json_decode( $response );

		if ( ! $result ) {
			$_traffic['icon'] = '';
			$_traffic['word'] = '';
			return $_traffic;
		}

		$data = (object) array( json_decode( $response ) );
		$all_incidents = array();
		foreach( $data as $traffic ) {
			foreach( $traffic->incidents as $incident ) {
				array_push( $all_incidents, $incident );
			}
		}

		return $all_incidents;

	}

	public function cst_homepage_fetch_feed($feed_url, $max_display) {

		$cache_key = md5( $feed_url . (int) $max_display );
		$cached_feed = wp_cache_get( $cache_key, 'default' ); //VIP: for some reason fetch_feed is not caching this properly.
		if ( $cached_feed === false || WP_DEBUG ) {
			$headlines = fetch_feed( $feed_url );
			if ( ! is_wp_error( $headlines ) ) :
				$maxitems = $headlines->get_item_quantity( $max_display );
				$items    = $headlines->get_items( 0, $maxitems );
				wp_cache_set( $cache_key, $items, 'default', 15 * MINUTE_IN_SECONDS );
				$test = strlen(serialize($items));
				return $items;
			else :
				return; //todo: VIP note: cache when the feed is not found.
			endif;
		}else{
			return $cached_feed;
		}
	}


	/**
	 * Fetch the JSON feed of aggregated posts being used on another CST Network site
	 * @param int $count
	 * @return json array
	 */
	public function cst_get_chatter_site($json_feed) {

		$response = wpcom_vip_file_get_contents( $json_feed );
		if ( is_wp_error( $response ) ) :
			return;
		else :
			$posts = json_decode( $response );
			if ( ! $posts ) {
				return;
			}
			return $posts;
		endif;

	}

	/**
	 * Fetch and output content from the specified section
	 * @param $content_query
	 */
	public function cst_homepage_content_block( $content_query, $nativo_slug = NULL ) {

		$cache_key = md5( serialize($content_query) );
		$cached_content = wp_cache_get( $cache_key );
		if ($cached_content === false ){
			$items = new \WP_Query( $content_query );
			ob_start();
			if ( $items->have_posts() ) {
				$count = $content_query['posts_per_page'];
				while( $items->have_posts() ) {
					$items->the_post();
					$obj = \CST\Objects\Post::get_by_post_id( get_the_ID() );
					if ( $count == $content_query['posts_per_page'] ) {
						if ( 'image' == $obj->get_featured_media_type() ) {
							$featured_image_id = $obj->get_featured_image_id();
							if ( $attachment = \CST\Objects\Attachment::get_by_post_id( $featured_image_id ) ) { ?>
								<a href="<?php echo esc_url( $obj->the_permalink() ); ?>" title="<?php echo esc_html( $obj->the_title() ); ?>" data-on="click" data-event-category="image" data-event-action="navigate-hp-column-wells">
								<?php echo $attachment->get_html( 'homepage-columns' ); ?>
								</a>
								<?php
							}
						}
						?>
			<?php if( $nativo_slug != NULL ) { ?>
				<ul id="<?php echo esc_html( $nativo_slug ); ?>">
			<?php } else { ?>
				<ul>
			<?php } ?>
					<?php }
					$count--;
					?>
					<li>
						<a href="<?php echo esc_url( $obj->the_permalink() ); ?>" title="<?php echo esc_html( $obj->the_title() ); ?>" data-on="click" data-event-category="content" data-event-action="navigate-hp-column-wells">
							<?php echo esc_html( $obj->get_title() ); ?>
						</a>
					</li>
				<?php } ?>
				</ul>
				<?php
			}
			$cached_content = ob_get_clean();
			wp_cache_set( $cache_key, $cached_content, 'default', 5 * MINUTE_IN_SECONDS );
		}
		echo $cached_content;
	}

	/**
	 * Fetch and output content from the specified section
	 * @param $content_query
	 */
	public function cst_dear_abby_recommendation_block( $content_query ) {

		$cache_key = md5( serialize($content_query) );
		$cached_content = wp_cache_get( $cache_key );
		if ($cached_content === false ){
			$items = new \WP_Query( $content_query );
			ob_start();
			if ( $items->have_posts() ) { ?>
			<div class="large-10 medium-offset-1 post-recommendations">
				<h3>Previously from Dear Abby</h3>
			<?php
				while( $items->have_posts() ) {
					$items->the_post();
					$obj = \CST\Objects\Post::get_by_post_id( get_the_ID() );
				?>
					<div class="columns large-3 medium-6 small-12 recommended-post">
						<a href="<?php echo esc_url( $obj->the_permalink() ); ?>" title="<?php echo esc_html( $obj->the_title() ); ?>"  data-on="click" data-event-category="dear-abby" data-event-action="click-text">
							<?php echo esc_html( $obj->get_title() ); ?>
						</a>
					</div>
				<?php } ?>
			</div>
			<?php
			}
			$cached_content = ob_get_clean();
			wp_cache_set( $cache_key, $cached_content, 'default', 5 * MINUTE_IN_SECONDS );
		}
		echo $cached_content;
	}

	/**
	 * Previously from / recommendations content block
	 * @param $feed_url
	 * @param $section_name
	 */
	public function cst_post_recommendation_block( $feed_url, $section_name ) {

		$cache_key = md5( $feed_url );
			$result = wp_cache_get( $cache_key, 'default' ); //VIP: for some reason fetch_feed is not caching this properly.
			if ( $result === false ) {
				$response = wpcom_vip_file_get_contents( $feed_url );
				if ( ! is_wp_error( $response ) ) {
					$result = json_decode( $response );
					wp_cache_set( $cache_key, $result, 'default', 5 * MINUTE_IN_SECONDS );
				}
			}
			?>
			<div class="medium-11 medium-offset-1 cst-recommendations">
				<div class="columns">
			 	<hr>
				<h3>Previously from <?php esc_html_e( $section_name ); ?></h3>
				<hr>
			</div>
			<?php foreach( $result->pages as $item ) {
				$chart_beat_top_content = (array) $item->metrics->post_id->top;
				$top_item = [];
				if ( ! empty( $chart_beat_top_content ) && is_array( $chart_beat_top_content ) ) {
					$top_item = array_keys( $chart_beat_top_content, max( $chart_beat_top_content ) );
				}
				if ( isset( $top_item[0] ) ) {
					$image_url = $this->get_remote_featured_image( $top_item[0] );
				} else {
					$image_url = esc_url( get_stylesheet_directory_uri() . $this->default_image_partial_url );
				}
				$temporary_title       = explode( '|', $item->title );
				$article_curated_title = $temporary_title[0];
				?>
				<div class="cst-recommended-content columns medium-6 small-12">
					<div class="cst-article">
						<a href="<?php echo esc_url( $item->path ); ?>" title="<?php echo esc_html( $article_curated_title ); ?>" class="cst-rec-anchor" data-on="click" data-event-category="previous-from" data-event-action="click-image">
						<div class="cst-recommended-image -amp-layout-size-defined">
							<img class="-amp-fill-content -amp-replaced-content" src="<?php echo esc_url( $image_url ); ?>" width="100" height="65" >
						</div>
						</a>
						<a href="<?php echo esc_url( $item->path ); ?>" title="<?php echo esc_html( $article_curated_title ); ?>" class="cst-rec-anchor" data-on="click" data-event-category="previous-from" data-event-action="click-text">
							<span><?php echo esc_html( $article_curated_title ); ?></span>
						</a>
					</div>
				</div>
			<?php } ?>
			</div>
<?php

	}

		/**
	 * @param $post_id
	 *
	 * @return bool|string
	 *
	 * Use WordPress(.com) REST API to retrieve featured image url
	 */
	private function get_remote_featured_image( $post_id ) {
		$featured_image_url = false;
		$remote_url = sprintf( 'https://public-api.wordpress.com/rest/v1.1/sites/suntimesmedia.wordpress.com/posts/%d?post_type=cst_article', $post_id );
		$response = wpcom_vip_file_get_contents( $remote_url );
		if ( ! is_wp_error( $response ) ) {
			$pages = json_decode( $response );
			if ( '' !== $pages->featured_image ) {
				$featured_image_url = $pages->featured_image . '?w=100';
			} else {
				return $featured_image_url;
			}
		}
		return $featured_image_url;
	}

	public function cst_nativo_determine_positions($slug) {

        $positions = array();
        switch( $slug ) {

            case 'news':
                $positions = array( 'News1', 'News2' );
                break;
            case 'chicago':
                $positions = array('NewsChi1', 'NewsChi2' );
                break;
            case 'crime':
                $positions = array( 'NewsCrime1', 'NewsCrime2' );
                break;
            case 'the-watchdogs':
                $positions = array( 'NewsWatch1', 'NewsWatch2' );
                break;
            case 'nation-world':
                $positions = array( 'NewsNation1', 'NewsNation2' );
                break;
            case 'education':
                $positions = array( 'NewsEdu1', 'NewsEdu2' );
                break;
            case 'transportation':
                $positions = array( 'NewsTrans1', 'NewsTrans2' );
                break;
            case 'business':
                $positions = array( 'NewsBus1', 'NewsBus2' );
                break;
            case 'sneed':
                $positions = array( 'NewsSneed1', 'NewsSneed2' );
                break;
            case 'chicago-politics':
                $positions = array( 'PolChi1', 'PolChi2' );
                break;
            case 'springfield-politics':
                $positions = array( 'PolSpring1', 'PolSpring2' );
                break;
            case 'washington-politics':
                $positions = array( 'PolWash1', 'PolWash2' );
                break;
            case 'lynn-sweet-politics':
                $positions = array( 'PolSweet1', 'PolSweet2' );
                break;
            case 'rick-morrissey':
                $positions = array( 'SportsMorrissey1', 'SportsMorrissey2' );
                break;
            case 'rick-telander':
                $positions = array( 'SportsTelander1', 'SportsTelander2' );
                break;
            case 'cubs-baseball':
                $positions = array( 'SportsCubs1', 'SportsCubs2' );
                break;
            case 'white-sox':
                $positions = array( 'SportsSox1', 'SportsSox2' );
                break;
            case 'bears':
                $positions = array( 'SportsBears1', 'SportsBears2' );
                break;
            case 'blackhawks':
                $positions = array( 'SportsHawks1', 'SportsHawks2' );
                break;
            case 'bulls':
                $positions = array( 'SportsBulls1', 'SportsBulls2' );
                break;
            case 'outdoor':
                $positions = array( 'SportsOutdoor1', 'SportsOutdoor2' );
                break;
            case 'fire':  
                $positions = array( 'SportsFire1', 'SportsFire2' );
                break;
            case 'colleges':
                $positions = array( 'SportsColleges1', 'SportsColleges2' );
                break;
            case 'entertainment':
            	$positions = array( 'Entertainment1', 'Entertainment2' );
            	break;
            default:
            	$positions = array( 'News1', 'News2' );
                break;
        }
        return $positions;
    }

	/**
	 * @return string
	 * 
	 * Determine and return the slug for use in headlines slider, sidebar and other template files.
	 */
	public function slug_detection() {
		if ( is_author() ) {
			$primary_slug = 'news';
		} elseif( is_single() ) {
			$obj = \CST\Objects\Post::get_by_post_id( get_the_ID() );
			$primary_section = $obj->get_primary_parent_section();
			$primary_slug = $primary_section->slug;
			if( ! in_array( $primary_slug, CST_Frontend::$post_sections ) ) {
				$parent_terms = get_term( $primary_section->parent, 'cst_section' );
				if ( is_wp_error( $parent_terms ) ) {
					$primary_slug = $primary_section->slug;
				} elseif ( ! in_array( $parent_terms->slug, CST_Frontend::$post_sections ) ) {
					$child_terms = get_term( $parent_terms->parent, 'cst_section' );
					$primary_slug = $child_terms->slug;
				} else {
					$primary_slug = $parent_terms->slug;
				}
			}
		} else {
			$primary_section = get_queried_object();
			if( isset( $primary_section ) && $primary_section->taxonomy == 'cst_section') {
				if( $primary_section->parent != 0 ) {
					$primary_slug = $primary_section->slug;
					if( ! in_array( $primary_slug, CST_Frontend::$post_sections ) ) {
						$current_section = get_term( $primary_section->parent, 'cst_section' );
						if( ! in_array( $current_section->slug, CST_Frontend::$post_sections ) ) {
							$current_section = get_term( $current_section->parent, 'cst_section' );
							if( ! in_array( $current_section->slug, CST_Frontend::$post_sections ) ) {
								$current_section = get_term( $current_section->parent, 'cst_section' );
							} else {
								$primary_slug = $current_section->slug;
							}
						} else {
							$primary_slug = $current_section->slug;
						}
					}
				} else {
					$primary_slug = $primary_section->slug;
				}
			}  else {
				$primary_slug = 'news';
			}
		}
		
		return $primary_slug;
	}

	/**
	* @param \CST\Objects\Post $obj
	* @param $author
	* @param $primary_section
	* @param $image_size
	* @param  $tracking_location_name
	* Display an article container and related markup in the homepage wells
	*/
	public function well_article_container_markup( \CST\Objects\Post $obj, $author, $primary_section, $image_size = 'chiwire-header-large', $tracking_location_name ) {
?>
<div class="article-container">
	<?php $this->well_article_markup( $obj, $author, $primary_section, $image_size, $tracking_location_name ); ?>
</div>
<?php
	}

	/**
	* @param \CST\Objects\Post $obj
	* @param $author
	* @param $primary_section
	* @param $image_size
	* @param  $tracking_location_name
	* Display an article anchor markup in the homepage wells
	*/
	public function well_article_markup( \CST\Objects\Post $obj, $author, $primary_section, $image_size = 'chiwire-header-small', $tracking_location_name ) {
?>
	<a href="<?php echo esc_url( $obj->the_permalink() ); ?>"  data-on="click" data-event-category="content" data-event-action="navigate-<?php echo esc_attr( $tracking_location_name ); ?>" >
		<?php
		if ( $featured_image_id = $obj->get_featured_image_id() ) {
			if ( $attachment = \CST\Objects\Attachment::get_by_post_id( $featured_image_id ) ) {
				echo wp_kses_post( $attachment->get_html( $image_size ) );
			}
		}
		?>
		<div class="article-title <?php echo esc_attr( strtolower( $primary_section->name ) ); ?>-cat">
			<h3><?php echo esc_html( $obj->get_title() ); ?></h3>
			<?php echo wp_kses_post( apply_filters( 'the_excerpt', $obj->get_excerpt() ) ); ?>
			<span>By <?php echo esc_html( $author ); ?></span>
		</div>
	</a>
<?php
	}

	/**
	 * @param \CST\Objects\Post $obj
	 *
	 * @return string
	 * Return author for use in homepage wells.
	 */
	public function get_article_author( \CST\Objects\Post $obj ) {
		if( $byline = $obj->get_byline() ) {
			$author = $byline;
		} else {
			$authors = $obj->get_authors();
			$author_data = $authors[0];
			$author = $author_data->get_display_name();
		}
		return $author;
	}

	/**
	* Adding OpenX script tag in header section of markup for all
 	* site templates that might display advertising
	*/

	public function action_cst_openx_header_bidding_script() {
		if ( is_page() ) {
			return;
		}
		?>
<script type="text/javascript" async src="//suntimes-d.openx.net/w/1.0/jstag?nc=61924087-suntimes"></script>
		<?php
	}
	/**
	 * Function called from section_head action in parts/page-header.php
	 * Checks if we have a video player for embedding purposes for a section front
	 */
	function action_cst_section_head_video() {
		if ( is_tax() ) {
			if ( array_key_exists( get_queried_object()->slug, $this->send_to_news_embeds ) ) {
				$this->inject_send_to_news_video_player( get_queried_object()->slug, get_queried_object_id() );
			}
		}
	}

	/**
	* @param $slug
	* @param $id
	* Inject SendToNews responsive video player into markup.
	*/
	function inject_send_to_news_video_player( $slug, $id ) {
		$template   = '<div class="row video-injection"><div class="columns small-12"><iframe id="%s" src="%s" %s></iframe></div></div>';
		$styles     = 'frameborder="0" scrolling="no" allowfullscreen="" style="height:100%; min-height: 22.4rem; width:1px; min-width:100%; margin:0 auto; padding:0; display:block; border:0 none;" class="s2nvcloader"';
		$iframe_url = sprintf( 'http://embed.sendtonews.com/player2/embedplayer.php?type=full&amp;fk=%s&amp;cid=4661', rawurlencode( $this->send_to_news_embeds[ $slug ] ) );
		$markup     = sprintf( $template, esc_attr( 's2nIframe-' . $this->send_to_news_embeds[ $slug ] . '-' . intval( $id ) ), esc_url( $iframe_url ), wp_kses_post( $styles ) );
		echo $markup;

	}
	/**
	 * Do not display section heading in the regular place
	 *  for the listed section names (based on slug)
	 * Immediately below the RSS area of the section front
 	 *
	 * @param $section_front_spacing
	 *
	 * @return  boolean
	 * Pretty title for section front
	 */
	function action_cst_section_front_heading( $section_front_spacing ) {

		if ( $this->do_sponsor_header() ) {
			$this->sponsor_header();
			return true;
		} else {
			$this->display_section_front_title( 'row grey-background wire upper-heading', 'columns small-12', '' );
			return false;
		}
	}
	/**
	 * Display section heading in the upper location
	 * only for the sections listed
 	 * Immediately above the RSS area of the section front
	 *
	 * @param $section_front_spacing
	 *
	 * Pretty title for section front
	 */
	function action_cst_section_front_upper_heading( ) {
		if ( $this->do_sponsor_header() ) {
			$this->sponsor_header();
		}
	}

	/**
	* Evaluation options to display a sponsor banner
	* Display on section header, article header, section and article header on single article page
	* or everything - section header, article header on index/section page and
	* article header on single article page
	* @param string $section_id
	*
	* @return bool
 	*/
	function do_sponsor_header( $section_id = '' ) {
		if ( '' === $section_id ) {
			// Section
			$term_metadata = fm_get_term_meta( get_queried_object_id(), 'cst_section', 'sponsor', true );
		} else {
			// Article
			$term_metadata = fm_get_term_meta( (int) $section_id , 'cst_section', 'sponsor', true );
		}
		if ( ! empty( $term_metadata['sponsor_options'] ) ) {
			$sponsor_options = array_flip( $term_metadata['sponsor_options'] );
			if ( array_key_exists( 'everything', $sponsor_options ) ) {
				return true;
			}
			if ( array_key_exists( 'section', $sponsor_options ) ) {
				if ( '' === $section_id ) { // Only return true if displaying on a section
					return true;
				}
			}
			if ( array_key_exists( 'article', $sponsor_options ) ) {
				if ( (int) $section_id && ! is_tax() ) {
					return true;
				}
			}
		}
		return false;
	}
	/**
	* Handle display of Section title and determine if a section sponsor image
	* and link should also be displayed
	* Accommodate same on article display
	* @param string $section_id
	*/

	function sponsor_header( $section_id = '') {
		// Handle sponsor image and link
		if ( '' === $section_id ) {
			$term_metadata = fm_get_term_meta( get_queried_object_id(), 'cst_section', 'sponsor', true );
			$class = 'row grey-background wire upper-heading';
		} else {
			$term_metadata = fm_get_term_meta( (int) $section_id , 'cst_section', 'sponsor', true );
			$class = 'upper-heading';
		}
		$name_width = 'columns small-12'; // DIV size if no sponsor image
		$sponsor_markup = '';
		if ( ! empty( $term_metadata ) ) {
			$start_date = $term_metadata['start_date'];
			$end_date = $term_metadata['end_date'];
			$today = time();
			if ( ( $today >= $start_date )  && ( $today <= $end_date ) ) {
			$sponsor_template = '
<div class="%1$s">
	<a href="%2$s" target="_blank">
		<img style="float:right;" src="%3$s" width="%4$s" height="%5$s">
	</a>
</div>
';
			$sponsor_image = wp_get_attachment_image_src( intval( $term_metadata['image'] ), array( 320, 50 ) );
			if ( $sponsor_image ) {
				$sponsor_markup = sprintf( $sponsor_template,
					( '' !== $section_id ) ? esc_attr( '' ) : esc_attr( 'columns medium-7 small-12' ),
					esc_url( $term_metadata['destination_url'] ),
					esc_url( $sponsor_image[0] ),
					esc_attr( $sponsor_image[1] ),
					esc_attr( $sponsor_image[2] )
				);
			}
			// DIV size if there is a sponsor image
			$name_width = 'columns medium-5 small-12';
			}
		}
		if ( '' !== $section_id ) {
			echo $sponsor_markup;
		} else {
			$this->display_section_front_title( $class, $name_width, $sponsor_markup );
		}
	}

	/**
 	* Display Section Front Title with/without sponsorship
	* @param $class
	* @param $name_width
	* @param $sponsor_markup
	*/
	public function display_section_front_title( $class, $name_width, $sponsor_markup ) {
		?>
<section class="<?php echo esc_attr( $class ); ?>">
	<div class="<?php echo esc_attr( $name_width ); ?>">
		<a href="" class="section-front" data-on="click" data-event-category="navigation" data-event-action="navigate-sf-upper-heading"><?php echo esc_html( str_replace( '_', ' ', get_queried_object()->name ) ); ?></a>
	</div>
	<?php echo $sponsor_markup; ?>
</section>
		<?php
	}
	/**
	* http://wordpressvip.zendesk.com/hc/requests/56671
 	*/
	function cst_remove_extra_twitter_js() {
		wp_deregister_script( 'twitter-widgets' );
	}

	/**
	* Determine whether to display the sliding billboard markup
    */
	function action_maybe_render_sliding_billboard() {

		if ( ! is_404() && ! is_singular() ) :
	        echo CST()->dfp_handler->unit( 1, 'div-gpt-billboard', 'dfp dfp-billboard dfp-centered' );
			echo CST()->dfp_handler->unit( 1, 'div-gpt-sbb', 'dfp dfp-sbb dfp-centered' );
	    endif;
	}

	/**
	*  Inject dfp ad settings, variables into header before gpt script call
	*/
	public function setup_dfp_header_ad_settings() {
		CST()->dfp_handler->ad_header_settings();
	}
		/**
	*
	* Inject supplied Teads tag just before the closing body tag of single article pages
	*
	*/
	public function inject_teads_tag() {

		if ( is_page() ) {
			return;
		}
		if ( is_singular() ) {
		?>
<!-- teads tag -->
<script type="text/javascript">
function ready(fn) {
  if (document.readyState != 'complete') {
    window.addEventListener('load', fn);
  } else {
    fn();
  }
}
function fn() {
window._ttf = window._ttf || [];
_ttf.push({
       pid          : 58294
       ,lang        : "en"
       ,slot        : '[itemprop="articleBody"] > p'
       ,format      : "inread"
       ,minSlot     : 3
       ,css         : "margin: 0px auto 5px; max-width: 550px;"
});

(function (d) {
        var js, s = d.getElementsByTagName('script')[0];
        js = d.createElement('script');
        js.async = true;
        js.src = '//cdn.teads.tv/media/format.js';
        s.parentNode.insertBefore(js, s);
})(window.document);
}
ready(fn);
</script><!-- /teads tag -->
	<?php
		}
	}

	/**
	* Inject sponsored content into selected article in the third paragraph
  	* @param string $article_content
  	* @return string $article_content
 	*/
 	public function inject_sponsored_content( $article_content ) {
 
 		if ( is_admin() ) {
 			return $article_content;
 		}
 		$obj = \CST\Objects\Post::get_by_post_id( get_queried_object_id() );
 		if ( 'cst_article' !== $obj->get_post_type() ) {
 			return $article_content;
 		}
 		$after_paragraph_number = 2;
 		if ( $sponsor_array = $obj->get_sponsored_content() ) {
			$matched_content = preg_match_all( '/(?:[^(p>)].*){1}/i', $article_content, $matched_items );
			if ( false === $matched_content ) {
				return $article_content;
			}
			if ( ! empty( $matched_items ) && $matched_content >= $after_paragraph_number ) {
				$matches = $matched_items[0];
				$sponsor_image_url = wp_get_attachment_image_src( $sponsor_array['sponsor_image'], 'chiwire-header-small' );
				$markup_to_inject_template = '
	<div class="sponsored-insert">
	<div class="row">
		<div class="small-5 columns sponsor-thumbnail"><a href="%2$s"><img src="%5$s" width="%6$s" height="%7$s"></a></div>
		<div class="small-7 columns sponsor-wording"><div class="holder"><h4>Sponsored by <a href="%2$s" class="sponsorname">%1$s</a></h4><p>%3$s</p><p>%4$s</p><a href="%2$s"><span class="seemore">See More</span></a></div></div>
	</div>
	</div>
	';
				$content_with_sponsorship = sprintf( $markup_to_inject_template,
					esc_attr( $sponsor_array['sponsor_content_name'] ),
					esc_url( $sponsor_array['sponsor_url'] . '?utm_source=sponsored_article&utm_medium=autos' ),
					esc_attr( $sponsor_array['sponsor_line1'] ),
					esc_attr( $sponsor_array['sponsor_line2'] ),
					esc_url( $sponsor_image_url[0] ),
					esc_attr( $sponsor_image_url[1] ),
					esc_attr( $sponsor_image_url[2] )
				 );
				$paragraph_with_script = trim( "\n" . $matches[2] ) . $content_with_sponsorship;
				$article_content = str_replace( $matches[2], $paragraph_with_script, $article_content );
			}
 		}

 		return $article_content;
 	}

	public function inject_newsletter_signup( $newsletter ) {

		$newsletter_codes = array(
			'news' => array( 'title' => 'News &amp; Politics', 'code' => '062jcp97-2819pvaa' ),
			'entertainment' => array( 'title' => 'Entertainment', 'code' => '062jcp97-bf1s1y92' ),
			'sports' => array( 'title' => 'Sports', 'code' => '062jcp97-06149p3a' ),
		);
		$template = '
<div class="large-7 medium-8 small-12 columns newsletter-box">
	<div class="newsletter-sign-up">
		<h3>Sign-Up for our %1$s Newsletter&nbsp;
			<a href="https://r1.surveysandforms.com/%2$s" target="_blank" class="button tiny info">
				<i class="fa fa-envelope"></i> Sign-Up
			</a>
		</h3>
	</div>
</div>
';
		echo sprintf( $template,
			esc_attr( $newsletter_codes[ $newsletter ]['title'] ),
			esc_attr( $newsletter_codes[ $newsletter ]['code'] )
		);
	}

	/**
	* Detect section and if appropriate inject Public Good markup
	* @param $obj \CST\Objects\Article | \CST\Objects\Post
	*/
	public function inject_public_good_markup( $obj ) {

		if ( $section = $obj->get_primary_parent_section() ) {
			if ( in_array( $section->slug, self::$pgs_section_slugs, true ) ) {
				return sprintf( '<div class="pgs-container"><a href="%1$s" target="_blank"><img src="%2$s" style="height:50px"></a></div>',
				 esc_url( 'https://assets.pgs.io/button/v2/takeaction.html?partner_id=chicago-sun-times' ),
				 esc_url( 'https://pgmapi.pgs.io/getpgmimage/getpgmbtn?partner_id=chicago-sun-times' )
				 );
			}
		}

	}

	/**
	 * Get and return an array of sections associated with this single object - article | gallery
	 * @return array|bool
	 *
	 */
	public function get_article_section_list() {

		$section_list = false;

		if ( is_singular() ) {
			$obj = \CST\Objects\Post::get_by_post_id( get_queried_object_id() );
			if ( $obj ) {
				$sections = $obj->get_sections();
				$section_list = array();
				if( $sections ) {
					if ( isset( $obj ) && is_object( $obj ) ) {
						foreach( $sections as $section ) {
							array_push( $section_list, strtolower( $section->name ) );
						}
					}
				}
			}
		}
		return $section_list;
	}

	/**
	* @param $obj
	* Determine and inject markup related to Chatter subject(s)
	*/
	public function inject_chatter_parameters( $obj ) {
		$chatter_selection = $obj->get_chatter_widget_selection();

		if ( $chatter_selection ) :
			switch ( $chatter_selection ) {
				case 'default_chatter':
					if ( $agg_primary_section = $obj->get_primary_section() ) :
						if ( 0 != $agg_primary_section->parent  ) {
							$agg_primary_section = $obj->get_grandchild_parent_section();
						}
						$agg_primary_section_slug = $agg_primary_section->slug;
					else :
						$agg_primary_section_slug = '';
					endif;
					break;
				case 'politics_chatter':
					$agg_primary_section_slug = 'politics';
					break;
				case 'sports_chatter':
					$agg_primary_section_slug = 'sports';
					break;
				case 'celeb_chatter':
					$agg_primary_section_slug = 'entertainment';
					break;
				case 'no_chatter':
					$agg_primary_section_slug = '';
					break;
				default:
					break;
			}
		else :
			if ( $agg_primary_section = $obj->get_primary_section() ) :
				if ( 0 != $agg_primary_section->parent ) {
					$agg_primary_section = $obj->get_grandchild_parent_section();
				}
				$agg_primary_section_slug = $agg_primary_section->slug;
			else :
				$agg_primary_section_slug = '';
			endif;
		endif;

		?>
<script type="text/javascript">
  window.SECTIONS_FOR_AGGREGO_CHATTER = <?php echo wp_json_encode( $agg_primary_section_slug ); ?>;
</script>
	<?php
	}

	/**
	 * Handle ad injection logic for section fronts and article pages and related infinite scrolling
	 *
	 * @param $paged page number within infinite scroll
	 */
	public function content_ad_injection( $paged ) {
?>
<section class="ad-container">
		<?php
		global $wp_query;
		if ( is_singular() ) {
			echo CST()->dfp_handler->dynamic_unit( get_the_ID(), 'div-gpt-placement-a', 'dfp-placement', 'article_lead_unit_mapping', ( ! $paged ) ? 'atf leaderboard 2' : 'atf leaderboard 3' );
		} else {
			if ( 0 === $wp_query->current_post && 0 === $paged ) {
				echo CST()->dfp_handler->dynamic_unit( get_the_ID(), 'div-gpt-placement-s', 'dfp-placement', 'sf_inline_mapping', 'rr cube 2' );
			} else {
				$every_two = $wp_query->current_post % 2;
				if ( ( ! $every_two ) ) {
					echo CST()->dfp_handler->dynamic_unit( get_the_ID(), 'div-gpt-placement-s', 'dfp-placement', 'sf_inline_mapping', 'rr cube 3' );
				}
			}
		}
		?>
</section>
<?php
	}

}
