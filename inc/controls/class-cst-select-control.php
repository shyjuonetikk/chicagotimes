<?php
if ( class_exists( 'WP_Customize_Control' ) ) {
	class WP_Customize_CST_Select_Control extends \WP_Customize_Control {

		/**
		 * Control type.
		 *
		 * @since 3.1.0
		 * @access public
		 * @var string
		 */
		public $type = 'cst_select_control';

		public function __construct( $manager, $id, $args = array(), $options = array() ) {
			parent::__construct( $manager, $id, $args );
			$this->setup_actions();
		}

		public function setup_actions() {
			add_action( 'customize_controls_enqueue_scripts', [ $this, 'custom_control_enqueue' ] );
		}

		public function custom_control_enqueue() {
			wp_enqueue_script( 'cst_customizer_control', esc_url( get_stylesheet_directory_uri() . '/assets/js/cst-customize-control.js' ), array( 'customize-controls', 'select2' ), '1.0', true );
			wp_localize_script( 'cst_customizer_control', 'CSTCustomizerControlData', array(
				'placeholder_text' => esc_html__( '!Choose article', 'chicagosuntimes' ),
				'nonce'            => wp_create_nonce( 'cst_customizer_control_homepage_headlines' ),
			) );
			wp_enqueue_style( 'select2', get_template_directory_uri() . '/assets/js/vendor/select2/select2.css' );
			wp_enqueue_script( 'select2', get_template_directory_uri() . '/assets/js/vendor/select2/select2.min.js' );
		}

		public function content_template() {
			parent::content_template(); // TODO: Change the autogenerated stub

			?>
			<label for="{{{ data.id }}}">
				<# if ( data.label ) { #>
					<span class="customize-control-title">{{{ data.label }}}</span>
					<# } #>
						<# if ( data.description ) { #>
							<span class="description customize-control-description">{{{ data.description }}}</span>
							<# } #>
			</label>
			<input class="widefat {{{ data.id }}}" id="{{{ data.id }}}" name="{{{ data.id }}}" value="{{{ data.headline }}}"
				   placeholder="Choosey choose" data-story-title="{{{ data.story_title }}}" data-related-section="{{{ data.related_section }}}"/>
			<?php
		}

		/**
		 * Renders the control within the Customizer Panel
		 *
		 * In the case of this control we setup an input field
		 * in cst-customize-control.js we initialize the field based on this->id naming
		 */
		public function render_content() {
		}

		public function to_json() {
			parent::to_json();
			$select_meta                   = $this->get_select_meta();
			$this->json['id']              = $this->id;
			$this->json['related_section'] = $select_meta['related_section'];
			$this->json['headline']        = $select_meta['headline'];
			$this->json['story_title']     = $select_meta['story_title'];
		}

		/**
		 * Get meta for input line item to be used in JS template
		 * @return array
		 */
		public function get_select_meta() {
			$select_meta                    = [];
			$select_meta['related_section'] = '';
			$select_meta['headline']        = get_theme_mod( $this->id );
			$obj                            = get_post( $select_meta['headline'] );
			if ( $obj ) {
				$content_type               = get_post_type( $obj->ID );
				$select_meta['story_title'] = $obj->post_title . ' [' . $content_type . ']';
			} else {
				if ( $select_meta['headline'] === $this->id ) {
					$select_meta['story_title'] = $this->input_attrs['placeholder'];
				} else {
					$select_meta['story_title'] = 'No article found';
				}
			}
			if ( isset( $this->input_attrs['data-related-section'] ) && ! empty( $this->input_attrs['data-related-section'] ) ) {
				$select_meta['related_section'] = $this->input_attrs['data-related-section'];
			}

			return $select_meta;
		}
	}
}